{
    "__inputs": [
      {
        "name": "DS_POSTGRES",
        "label": "postgres",
        "description": "",
        "type": "datasource",
        "pluginId": "postgres",
        "pluginName": "PostgreSQL"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "9.0.6"
      },
      {
        "type": "datasource",
        "id": "postgres",
        "name": "PostgreSQL",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "timeseries",
        "name": "Time series",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 1,
    "id": null,
    "links": [],
    "liveNow": true,
    "panels": [
      {
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 10,
        "title": "Summary",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "mypostgres"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 1
        },
        "id": 8,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "mypostgres"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_issues,\n    public.repos.repo,\n    $__timeGroup(public.github_issues.created_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.closed = false\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Open Issues by Creation Date by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "mypostgres"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 1
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "mypostgres"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_issues,\n    public.repos.repo,\n    $__timeGroup(public.github_issues.closed_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.closed\nAND $__timeFilter(public.github_issues.closed_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Closed Issues by Closed Date by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "mypostgres"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 9
        },
        "id": 6,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "mypostgres"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_issues,\n    public.repos.repo,\n    $__timeGroup(public.github_issues.created_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.created_at IS NOT NULL\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Issues Created by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "mypostgres"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 9
        },
        "id": 4,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "mypostgres"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "WITH labels AS (SELECT\n        public.github_issues.database_id,\n        public.github_issues.repo_id,\n        JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label\n    FROM public.github_issues\n)\n\nSELECT\n    COUNT(*) AS total_issues,\n    labels.label,\n    $__timeGroup(public.github_issues.created_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN labels ON public.github_issues.repo_id = labels.repo_id AND public.github_issues.database_id = labels.database_id\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.created_at IS NOT NULL\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Issues Created Labels (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 17
        },
        "id": 12,
        "panels": [],
        "title": "Time To Close",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "mypostgres"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 40,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "decimals": 1,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "dtdurations"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 18
        },
        "id": 14,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "mypostgres"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n  AVG(EXTRACT(EPOCH FROM public.github_issues.closed_at - public.github_issues.created_at)) AS time_to_close,\n  $__timeGroup(public.github_issues.closed_at, '${interval}', 0) AS time,\n\t(public.github_repo_info.owner || '/' || public.github_repo_info.name) AS base_repository_name\nFROM github_issues\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nWHERE github_issues.closed_at IS NOT NULL\nGROUP BY 2,3\nORDER BY 2",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Mean Time To Close by Repo (per ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "time_to_close (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      }
    ],
    "schemaVersion": 36,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "mypostgres"
          },
          "definition": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "description": "All repositories indexed by MergeStat",
          "hide": 0,
          "includeAll": true,
          "label": "Repositories",
          "multi": true,
          "name": "repositories",
          "options": [],
          "query": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "mypostgres"
          },
          "definition": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "description": "Filter by repos with specific tags. If \"All\" is selected, any repo will match (including those without tags)",
          "hide": 0,
          "includeAll": true,
          "label": "Repository Tags",
          "multi": true,
          "name": "repository_tags",
          "options": [],
          "query": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "auto": true,
          "auto_count": 30,
          "auto_min": "1d",
          "current": {
            "selected": false,
            "text": "7d",
            "value": "7d"
          },
          "hide": 0,
          "label": "Interval",
          "name": "interval",
          "options": [
            {
              "selected": false,
              "text": "auto",
              "value": "$__auto_interval_interval"
            },
            {
              "selected": false,
              "text": "1d",
              "value": "1d"
            },
            {
              "selected": true,
              "text": "7d",
              "value": "7d"
            },
            {
              "selected": false,
              "text": "14d",
              "value": "14d"
            },
            {
              "selected": false,
              "text": "30d",
              "value": "30d"
            },
            {
              "selected": false,
              "text": "90d",
              "value": "90d"
            },
            {
              "selected": false,
              "text": "180d",
              "value": "180d"
            }
          ],
          "query": "1d,7d,14d,30d,90d,180d",
          "queryValue": "",
          "refresh": 2,
          "skipUrlSync": false,
          "type": "interval"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "mypostgres"
          },
          "definition": "SELECT DISTINCT state FROM public.github_issues",
          "description": "Issue state",
          "hide": 0,
          "includeAll": true,
          "label": "States",
          "multi": true,
          "name": "state",
          "options": [],
          "query": "SELECT DISTINCT state FROM public.github_issues",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "mypostgres"
          },
          "definition": "SELECT DISTINCT JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label FROM public.github_issues order by 1",
          "description": "Issue Labels",
          "hide": 0,
          "includeAll": true,
          "label": "Labels",
          "multi": true,
          "name": "labels",
          "options": [],
          "query": "SELECT DISTINCT JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label FROM public.github_issues order by 1",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-90d",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Issues",
    "uid": "IxPrjuM4z",
    "version": 10,
    "weekStart": "monday"
  }