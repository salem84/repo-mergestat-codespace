{
    "__inputs": [
      {
        "name": "DS_POSTGRES",
        "label": "postgres",
        "description": "",
        "type": "datasource",
        "pluginId": "postgres",
        "pluginName": "PostgreSQL"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "panel",
        "id": "barchart",
        "name": "Bar chart",
        "version": ""
      },
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "9.0.6"
      },
      {
        "type": "panel",
        "id": "piechart",
        "name": "Pie chart",
        "version": ""
      },
      {
        "type": "datasource",
        "id": "postgres",
        "name": "PostgreSQL",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "stat",
        "name": "Stat",
        "version": ""
      },
      {
        "type": "panel",
        "id": "table",
        "name": "Table",
        "version": ""
      },
      {
        "type": "panel",
        "id": "timeseries",
        "name": "Time series",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 1,
    "id": null,
    "links": [],
    "liveNow": true,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 8,
        "panels": [],
        "title": "Pull Requests",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "description": "Number of PRs merged in period",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 5,
          "x": 0,
          "y": 1
        },
        "id": 26,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT count(*) FROM github_pull_requests\nJOIN repos ON github_pull_requests.repo_id = repos.id\nWHERE $__timeFilter(merged_at)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? base_repository_name) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (tags @> '${repository_tags:json}'::jsonb) ELSE true END)",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "PRs Merged in Period",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "description": "Number of repositories that had PRs merged",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 5,
          "x": 5,
          "y": 1
        },
        "id": 28,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT count(DISTINCT repo_id) FROM github_pull_requests\nJOIN repos ON github_pull_requests.repo_id = repos.id\nWHERE $__timeFilter(merged_at)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? base_repository_name) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (tags @> '${repository_tags:json}'::jsonb) ELSE true END)",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Across This Many Repos",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "description": "Number of PR authors in period",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 5,
          "x": 10,
          "y": 1
        },
        "id": 30,
        "options": {
          "colorMode": "none",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT count(DISTINCT author_login) FROM github_pull_requests\nJOIN repos ON github_pull_requests.repo_id = repos.id\nWHERE $__timeFilter(merged_at)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? base_repository_name) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (tags @> '${repository_tags:json}'::jsonb) ELSE true END)",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Unique PR Authors",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "description": "Count of PRs merged within time period for matching repositories",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": []
          },
          "overrides": []
        },
        "gridPos": {
          "h": 18,
          "w": 9,
          "x": 15,
          "y": 1
        },
        "id": 34,
        "options": {
          "displayLabels": [],
          "legend": {
            "displayMode": "table",
            "placement": "bottom",
            "values": [
              "percent",
              "value"
            ]
          },
          "pieType": "donut",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/^count$/",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT base_repository_name, count(*) FROM github_pull_requests\nJOIN repos ON github_pull_requests.repo_id = repos.id\nWHERE merged AND $__timeFilter(merged_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? base_repository_name) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY base_repository_name ORDER BY count(*) DESC",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "PRs Merged by Repository",
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMin": 0,
              "fillOpacity": 100,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 13,
          "w": 15,
          "x": 0,
          "y": 6
        },
        "id": 32,
        "options": {
          "barRadius": 0,
          "barWidth": 0.97,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "orientation": "auto",
          "showValue": "never",
          "stacking": "normal",
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          },
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 100
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n\tcount(*),\n\tbase_repository_name,\n\t$__timeGroup(merged_at, '${interval}', 0) AS time\nFROM github_pull_requests JOIN repos ON github_pull_requests.repo_id = repos.id\nWHERE merged_at IS NOT NULL\nAND $__timeFilter(merged_at)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? base_repository_name) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY time, base_repository_name\nORDER BY time",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "PRs by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "count (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "barchart"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 19
        },
        "id": 2,
        "panels": [],
        "title": "Stargazers",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 20
        },
        "id": 20,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n\tcount(*),\n\t(public.github_repo_info.owner || '/' || public.github_repo_info.name) AS base_repository_name,\n\t$__timeGroup(starred_at, '${interval}', 0) AS time\nFROM public.github_stargazers\nINNER JOIN public.github_repo_info ON public.github_stargazers.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE starred_at IS NOT NULL\nAND $__timeFilter(public.github_stargazers.starred_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Stargazers by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "count (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 28
        },
        "id": 14,
        "panels": [],
        "title": "Tags",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "total_tags Total Tags"
              },
              "properties": [
                {
                  "id": "custom.lineWidth",
                  "value": 4
                },
                {
                  "id": "displayName",
                  "value": "Total Tags"
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      10,
                      10
                    ],
                    "fill": "dash"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 29
        },
        "id": 22,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "hide": false,
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    'Total Tags' AS base_repository_name,\n    $__timeGroup(public.git_commits.committer_when, '${interval}', 0) AS time,\n    COUNT(*) AS total_tags\nFROM public.git_refs\nINNER JOIN public.git_commits ON public.git_refs.tag_commit_hash = public.git_commits.hash AND public.git_refs.repo_id = public.git_commits.repo_id\nINNER JOIN public.repos ON public.git_commits.repo_id = public.repos.id\nINNER JOIN public.github_repo_info ON public.git_commits.repo_id = public.github_repo_info.repo_id\nWHERE\n    public.git_refs.type = 'tag'\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY time, base_repository_name\nORDER BY time, total_tags",
            "refId": "B",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          },
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    public.github_repo_info.owner || '/' || public.github_repo_info.name AS base_repository_name,\n    $__timeGroup(public.git_commits.committer_when, '${interval}', 0) AS time,\n    COUNT(*) AS total_tags\nFROM public.git_refs\nINNER JOIN public.git_commits ON public.git_refs.tag_commit_hash = public.git_commits.hash AND public.git_refs.repo_id = public.git_commits.repo_id\nINNER JOIN public.repos ON public.git_commits.repo_id = public.repos.id\nINNER JOIN public.github_repo_info ON public.git_commits.repo_id = public.github_repo_info.repo_id\nWHERE\n    public.git_refs.type = 'tag'\nAND $__timeFilter(public.git_commits.committer_when)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY time, base_repository_name\nORDER BY time, total_tags",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Tags by Repo  (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_tags (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 37
        },
        "id": 12,
        "panels": [],
        "title": "Issues",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 38
        },
        "id": 16,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_issues,\n    public.repos.repo,\n    $__timeGroup(public.github_issues.created_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.created_at IS NOT NULL\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Issues Created by Repo (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 38
        },
        "id": 18,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "sortBy": "Total",
            "sortDesc": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "WITH labels AS (SELECT\n        public.github_issues.database_id,\n        public.github_issues.repo_id,\n        JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label\n    FROM public.github_issues\n)\n\nSELECT\n    COUNT(*) AS total_issues,\n    labels.label,\n    $__timeGroup(public.github_issues.created_at, '${interval}', 0) AS time\nFROM public.github_issues\nINNER JOIN labels ON public.github_issues.repo_id = labels.repo_id AND public.github_issues.database_id = labels.database_id\nINNER JOIN public.github_repo_info ON public.github_issues.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.github_repo_info.repo_id = public.repos.id\nWHERE public.github_issues.created_at IS NOT NULL\nAND $__timeFilter(public.github_issues.created_at) \nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${state:json}'::jsonb) <> 0 THEN ('${state:json}'::jsonb ? public.github_issues.state) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${labels:json}'::jsonb) <> 0 THEN (public.github_issues.labels @> '${labels:json}'::jsonb) ELSE true END)\nGROUP BY 2,3\nORDER BY 3",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Issues Created Labels (by ${interval})",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "total_issues (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 46
        },
        "id": 10,
        "panels": [],
        "title": "Commits",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "count Total Commits"
              },
              "properties": [
                {
                  "id": "custom.lineWidth",
                  "value": 4
                },
                {
                  "id": "displayName",
                  "value": "Total Commits"
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      10,
                      10
                    ],
                    "fill": "dash"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 47
        },
        "id": 24,
        "options": {
          "legend": {
            "calcs": [
              "max",
              "min",
              "mean",
              "sum"
            ],
            "displayMode": "table",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "hide": false,
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n\tCOUNT(DISTINCT public.git_commits.hash) as count,\n\t'Total Commits' AS base_repository_name,\n\t$__timeGroup(public.git_commits.committer_when, '${interval}', 0) AS time\nFROM public.git_commits\nINNER JOIN public.github_repo_info ON public.git_commits.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.git_commits.repo_id = public.repos.id\nWHERE public.git_commits.committer_when IS NOT NULL AND public.git_commits.parents < 2\nAND $__timeFilter(public.git_commits.committer_when)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY time, base_repository_name\nORDER BY time, count",
            "refId": "B",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          },
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n\tCOUNT(DISTINCT public.git_commits.hash) as count,\n\tpublic.github_repo_info.owner || '/' || public.github_repo_info.name AS base_repository_name,\n\t$__timeGroup(public.git_commits.committer_when, '${interval}', 0) AS time\nFROM public.git_commits\nINNER JOIN public.github_repo_info ON public.git_commits.repo_id = public.github_repo_info.repo_id\nINNER JOIN public.repos ON public.git_commits.repo_id = public.repos.id\nWHERE public.git_commits.committer_when IS NOT NULL AND public.git_commits.parents < 2\nAND $__timeFilter(public.git_commits.committer_when)\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY time, base_repository_name\nORDER BY time, count",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Commits by Repo",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "count (.*)",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 55
        },
        "id": 6,
        "panels": [],
        "title": "Files",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 56
        },
        "id": 36,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_worfkflows\nFROM public.git_files\nINNER JOIN public.repos ON public.repos.id = public.git_files.repo_id\nWHERE public.git_files.path LIKE '.github/workflows%.y%ml'\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Total Workflows",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMin": 0,
              "fillOpacity": 80,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 56
        },
        "id": 40,
        "options": {
          "barRadius": 0,
          "barWidth": 0.97,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "orientation": "auto",
          "showValue": "auto",
          "stacking": "none",
          "tooltip": {
            "mode": "single",
            "sort": "none"
          },
          "xField": "dependencies_go_version",
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "pluginVersion": "9.0.0",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    dependencies_go_version,\n    SUM(count) AS count\nFROM (SELECT\n    1 AS count,\n    SUBSTRING(public.git_files.contents FROM 'go ([0-9]+.[0-9]+)') AS dependencies_go_version\n    FROM public.git_files\n    INNER JOIN public.repos ON public.repos.id = public.git_files.repo_id\n    WHERE public.git_files.path LIKE '%go.mod'\n) AS t\nGROUP BY dependencies_go_version\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Go Versions by Version",
        "type": "barchart"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 64
        },
        "id": 38,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    public.repos.repo AS repo,\n    public.git_files.path\nFROM public.git_files\nINNER JOIN public.repos ON public.repos.id = public.git_files.repo_id\nWHERE public.git_files.path LIKE '.github/workflows%.y%ml' --Allows for both .yml and .yaml\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Workflows",
        "type": "table"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMin": 0,
              "fillOpacity": 80,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 64
        },
        "id": 44,
        "options": {
          "barRadius": 0,
          "barWidth": 0.97,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "orientation": "auto",
          "showValue": "auto",
          "stacking": "none",
          "tooltip": {
            "mode": "single",
            "sort": "none"
          },
          "xField": "dependencies_react_version",
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "pluginVersion": "9.0.0",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    dependencies_react_version,\n    SUM(count) as count\nFROM (SELECT\n    public.repos.repo,\n    COALESCE(\n        JSON_EXTRACT_PATH_TEXT(public.git_files.contents::json, variadic '{packages,\"\",dependencies,react}'), --additional paths can be added to this coalesce statement\n        JSON_EXTRACT_PATH_TEXT(public.git_files.contents::json, variadic '{dependencies,react,version}'),\n        ''\n    ) AS dependencies_react_version,\n    1 AS count\n    FROM public.git_files\n    INNER JOIN public.repos ON public.repos.id = public.git_files.repo_id\n    WHERE public.git_files.path LIKE '%package-lock.json' AND public.git_files.contents LIKE '%\"react\"%'\n) AS t\nGROUP BY dependencies_react_version\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "React Locked Versions by Version",
        "type": "barchart"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 72
        },
        "id": 4,
        "panels": [],
        "title": "Trivy",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "dark-red",
                  "value": 1
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 73
        },
        "id": 46,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [],
            "fields": "/^total_vulnerabilities$/",
            "values": true
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_vulnerabilities\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE public.trivy_repo_vulnerabilities.vulnerability_severity = 'CRITICAL'\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Total Critical Vulnerabilities",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "fillOpacity": 80,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "unknown"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "blue",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "low"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "super-light-yellow",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "medium"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "super-light-orange",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "high"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "red",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "critical"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "dark-red",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "total_vulnerabilities"
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": true
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 73
        },
        "id": 48,
        "options": {
          "barRadius": 0,
          "barWidth": 0.97,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "orientation": "horizontal",
          "showValue": "never",
          "stacking": "normal",
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          },
          "xField": "base_repository_name",
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    public.github_repo_info.owner || '/' || public.github_repo_info.name AS base_repository_name,\n    COUNT(case when (vulnerability_severity='UNKNOWN') then 1 else NULL end) as unknown,\n    COUNT(case when (vulnerability_severity='LOW') then 1 else NULL end) as low,\n    COUNT(case when (vulnerability_severity='MEDIUM') then 1 else NULL end) as medium,\n    COUNT(case when (vulnerability_severity='HIGH') then 1 else NULL end) as high,\n    COUNT(case when (vulnerability_severity='CRITICAL') then 1 else NULL end) as critical,\n    COUNT(*) AS total_vulnerabilities\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY 1\nORDER BY 7 DESC\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Vulnerabilities by Repo",
        "type": "barchart"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "repo"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 245
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "vulnerability_id"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 212
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 81
        },
        "id": 50,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    (public.github_repo_info.owner || '/' || public.github_repo_info.name) as repo,\n    public.trivy_repo_vulnerabilities.vulnerability_id,\n    public.trivy_repo_vulnerabilities.vulnerability_title,\n    JSON_EXTRACT_PATH_TEXT(public.trivy_repo_vulnerabilities.vulnerability::json, variadic '{PublishedDate}') AS PublishedDate,\n    JSON_EXTRACT_PATH_TEXT(public.trivy_repo_vulnerabilities.vulnerability::json, variadic '{FixedVersion}') AS FixedVersion,\n    public.trivy_repo_vulnerabilities.vulnerability_installed_version\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE public.trivy_repo_vulnerabilities.vulnerability_severity = 'CRITICAL'\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Critical Vulnerabilities",
        "type": "table"
      }
    ],
    "schemaVersion": 36,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "description": "All repositories indexed by MergeStat",
          "hide": 0,
          "includeAll": true,
          "label": "Repositories",
          "multi": true,
          "name": "repositories",
          "options": [],
          "query": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 5,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "description": "Filter by repos with specific tags. If \"All\" is selected, any repo will match (including those without tags)",
          "hide": 0,
          "includeAll": true,
          "label": "Repository Tags",
          "multi": true,
          "name": "repository_tags",
          "options": [],
          "query": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 5,
          "type": "query"
        },
        {
          "auto": true,
          "auto_count": 30,
          "auto_min": "1d",
          "current": {
            "selected": false,
            "text": "7d",
            "value": "7d"
          },
          "hide": 0,
          "label": "Interval",
          "name": "interval",
          "options": [
            {
              "selected": false,
              "text": "auto",
              "value": "$__auto_interval_interval"
            },
            {
              "selected": false,
              "text": "1d",
              "value": "1d"
            },
            {
              "selected": true,
              "text": "7d",
              "value": "7d"
            },
            {
              "selected": false,
              "text": "14d",
              "value": "14d"
            },
            {
              "selected": false,
              "text": "30d",
              "value": "30d"
            },
            {
              "selected": false,
              "text": "90d",
              "value": "90d"
            },
            {
              "selected": false,
              "text": "180d",
              "value": "180d"
            }
          ],
          "query": "1d,7d,14d,30d,90d,180d",
          "queryValue": "",
          "refresh": 2,
          "skipUrlSync": false,
          "type": "interval"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT DISTINCT state FROM public.github_issues",
          "description": "Issue state",
          "hide": 0,
          "includeAll": true,
          "label": "Issue State",
          "multi": true,
          "name": "state",
          "options": [],
          "query": "SELECT DISTINCT state FROM public.github_issues",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT DISTINCT JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label FROM public.github_issues order by 1",
          "description": "Issue Labels",
          "hide": 0,
          "includeAll": true,
          "label": "Issue Labels",
          "multi": true,
          "name": "labels",
          "options": [],
          "query": "SELECT DISTINCT JSONB_ARRAY_ELEMENTS_TEXT(public.github_issues.labels) AS label FROM public.github_issues order by 1",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-90d",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "MergeStat Examples",
    "uid": "PyNLihybcv",
    "version": 8,
    "weekStart": "monday"
  }